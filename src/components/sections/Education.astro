---
import Section from "../Section.astro";

interface Props {
  title: string;
  english: boolean;
  education: (
    | {
        institution: string;
        url: string;
        area: string;
        studyType: string;
        startDate: string;
        endDate: string;
        score: string;
        courses: null;
      }
    | {
        institution: string;
        url: string;
        area: string;
        studyType: string;
        startDate: string;
        endDate: null;
        score: null;
        courses: null;
      }
  )[];
}

const { education, title, english } = Astro.props;
---

<Section title={title}>
  <ul>
    {
      education.map(
        ({ institution, url, area, studyType, startDate, endDate, score }) => {
          const startYear = `${new Date(startDate).getFullYear() + 1}`;
          const endYear = endDate
            ? `${new Date(endDate).getFullYear() + 1}
              `
            : english
              ? "Present"
              : "Actual";

          const period = `${startYear} - ${endYear}`;
          return (
            <li>
              <article>
                <header>
                  <div>
                    {url ? (
                      <a href={url} target="_blank" rel="noopener noreferrer">
                        <h3>{institution}</h3>
                      </a>
                    ) : (
                      <h3>{institution}</h3>
                    )}
                    <h4>{area}</h4>
                  </div>

                  <time>{period}</time>
                </header>

                <footer>
                  <p>
                    {" "}
                    <span>{english ? "Type:" : "Tipo:"}</span> {studyType}
                  </p>
                  {score && (
                    <p>
                      <span>{english ? "Level:" : "Nivel:"}</span> {score}
                    </p>
                  )}
                </footer>
              </article>
            </li>
          );
        }
      )
    }
  </ul>
</Section>

<style>
  ul {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  article h3 {
    font-weight: 700;
    color: #111;
  }

  article a:hover {
    text-decoration: underline;
  }

  article h4 {
    color: #161616;
    font-weight: 600;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    color: #555;
    font-size: 0.85rem;
  }
  p span {
    font-weight: bold;
    color: #111;
  }
</style>
